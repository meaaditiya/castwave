rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /chatRooms/{chatRoomId} {
      // READ:
      // - Allow reading any public room.
      // - Allow reading a private room if the user is the host.
      allow get: if resource.data.isPrivate == false || resource.data.hostId == request.auth.uid;

      // LIST (QUERY):
      // - Allow querying for public rooms.
      // - Allow querying for a user's own rooms.
      allow list: if (request.query.where.isPrivate == false && request.query.where.hostId == null) ||
                     (request.query.where.hostId == request.auth.uid);

      // WRITE:
      // - CREATE: Any authenticated user can create a chat room.
      // - UPDATE: Only the host can update a chat room (e.g., end it, feature a message).
      // - DELETE: Only the host can delete a chat room.
      allow write: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.hostId;

      match /messages/{messageId} {
        // READ: Anyone who is an approved participant can read messages.
        // This is controlled by client-side logic which only fetches messages if the user is approved.
        // We allow broad read access here, secured by the parent document logic.
        allow read: if request.auth != null;

        // WRITE:
        // - CREATE: Only approved participants can send messages.
        // - UPDATE: Only authenticated users can vote (update upvotes/downvotes).
        // - DELETE: No one can delete messages directly.
        allow create: if request.auth != null && exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) &&
                         (get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved' ||
                          get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'speaker');

        allow update: if request.auth != null;
        allow delete: if false;
      }

      match /participants/{participantId} {
        // READ: Any authenticated user can read the participants list.
        allow read: if request.auth != null;
        
        // WRITE:
        // - CREATE: Any authenticated user can add themselves (request to join).
        // - UPDATE: Only the host can change a participant's status. The user can update their own document to request joining again.
        // - DELETE: Only the host can delete/remove a participant.
        allow create: if request.auth.uid == participantId;
        allow update: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid || request.auth.uid == participantId;
        allow delete: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid;
      }

      match /polls/{pollId} {
         // READ: Any authenticated user can read polls.
        allow read: if request.auth != null;

        // WRITE:
        // - CREATE/DELETE: Only the host can create or delete polls.
        // - UPDATE: Host can update (end poll), users can update (vote).
        allow create, delete: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid;
        allow update: if request.auth != null;
      }
    }
  }
}
