rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the host of a specific chat room
    function isHost(chatRoomId) {
      return isSignedIn() && request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
    }

    match /chatRooms/{chatRoomId} {
      // Anyone can read chat rooms (for the main list)
      allow read: if isSignedIn();
      // Only authenticated users can create rooms
      allow create: if isSignedIn();
      // Only the host can update or delete the chat room document
      allow update, delete: if isHost(chatRoomId);

      // Rules for the 'participants' subcollection
      match /participants/{userId} {
        // The host can read, create, update, delete any participant record
        allow read, write: if isHost(chatRoomId);
        // Any signed-in user can create THEIR OWN participant record (to request to join)
        allow create: if isSignedIn() && request.auth.uid == userId;
      }

      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
        // Anyone signed in can read messages
        allow read: if isSignedIn();
        // Only approved participants can write messages
        allow create: if isSignedIn() && get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
        // Only the host can update or delete messages (e.g., for moderation)
        allow update, delete: if isHost(chatRoomId);
      }
      
      // Rules for the 'polls' subcollection
      match /polls/{pollId} {
        // Anyone signed in can read polls
        allow read: if isSignedIn();
        // Only the host can create, update, or delete polls
        allow write: if isHost(chatRoomId);
      }
    }
  }
}
