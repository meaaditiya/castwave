rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read their own profile, but can create one for themselves.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Chatrooms can be read by anyone if they are not private.
    // Only the host can create, update, or delete their own chatrooms.
    match /chatRooms/{chatRoomId} {
      allow read: if resource.data.isPrivate == false || request.auth.uid == resource.data.hostId;
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.hostId;
      
      // Messages and participants can be read by anyone in a public room.
      // In a private room, only approved participants can read.
      // Writing messages requires being an approved participant.
      match /{subcollection}/{docId} {
        allow read: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.isPrivate == false ||
                      (request.auth.uid != null && exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved');

        allow create, update, delete: if request.auth.uid != null && exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) &&
                               get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
      }
       match /polls/{pollId} {
         allow read, write: if request.auth.uid != null && exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid));
       }
    }
  }
}
