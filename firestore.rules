rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(chatRoomId) {
      return request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
    }
    function isApprovedParticipant(chatRoomId) {
      // Check if the user's participant document exists and their status is 'approved'.
      return exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
    }
    match /chatRooms/{chatRoomId} {
      // Allow any authenticated user to read a room's main document.
      // This is necessary for joining and seeing room details.
      allow get: if request.auth != null;
      // Allow authenticated users to list all public rooms for the homepage.
      allow list: if request.auth != null; 

      // Allow only the owner to create, update, or delete a room document.
      allow create: if request.auth.uid == request.resource.data.hostId;
      allow update, delete: if isOwner(chatRoomId);
      match /participants/{userId} {
        // A user can create their own participant document to request entry.
        allow create: if request.auth.uid == userId;

        // A user can read their own status. The host can read anyone's status.
        allow get: if request.auth.uid == userId || isOwner(chatRoomId);
        // Any authenticated user can see the list of participants to check if they should join.
        allow list: if request.auth != null;

        // Only the host can update a participant's status (approve/deny/remove).
        allow update: if isOwner(chatRoomId);

        // Host can remove participants
        allow delete: if isOwner(chatRoomId);
      }
      match /messages/{messageId} {
        // The host or an approved participant can read messages.
        allow read: if isOwner(chatRoomId) || isApprovedParticipant(chatRoomId);
        // An approved participant can create messages.
        allow create: if isApprovedParticipant(chatRoomId) && request.resource.data.userId == request.auth.uid;
        // Allow voting (update) for approved participants.
        allow update: if isApprovedParticipant(chatRoomId);
        allow delete: if isOwner(chatRoomId);
      }
      match /polls/{pollId} {
        // The host or an approved participant can read polls.
        allow read: if isOwner(chatRoomId) || isApprovedParticipant(chatRoomId);
        // Only the host can create polls.
        allow create: if isOwner(chatRoomId);
        // Host can end polls. Participants can vote (which is an update).
        allow update: if isOwner(chatRoomId) || isApprovedParticipant(chatRoomId);
        // Host can delete polls.
        allow delete: if isOwner(chatRoomId);
      }
    }
  }
}