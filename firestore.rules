rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /chatRooms/{chatRoomId} {
      // Anyone can read a chat room if it is public.
      allow read: if resource.data.isPrivate == false;
      // Only the host can create, update, or delete a chat room document.
      allow create, update, delete: if request.auth.uid == request.resource.data.hostId;
      
      // Allow the host to get their own private rooms.
      allow get: if request.auth.uid == resource.data.hostId;

      match /messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
        allow update: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
        allow delete: if request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
      }

      match /polls/{pollId} {
         allow read, create, update: if get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
         allow delete: if request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
      }

      match /participants/{participantId} {
        allow read: if request.auth.uid != null;
        // The host can update any participant's status
        allow update: if request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
        // A user can create their own participant document (to request access)
        allow create: if request.auth.uid == participantId;
        allow delete: if request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
      }
    }
  }
}