rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserHost(chatRoomId) {
      return request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
    }

    function isParticipantApproved(chatRoomId, userId) {
      let participant = get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(userId)).data;
      return participant.status == 'approved';
    }

    match /chatRooms/{chatRoomId} {
      // Public rooms can be read by anyone.
      allow get: if resource.data.isPrivate == false || isUserHost(chatRoomId) || isParticipantApproved(chatRoomId, request.auth.uid);
      
      // Allow listing of public chat rooms.
      allow list: if request.auth != null;

      // Only authenticated users can create a chat room.
      allow create: if isUserAuthenticated();

      // Only the host can update or end a chat room (isLive=false).
      allow update: if isUserHost(chatRoomId);

      // Only the host can delete a chat room.
      allow delete: if isUserHost(chatRoomId);

      match /messages/{messageId} {
        // Only approved participants or the host can read/write messages.
        allow read, write: if isUserHost(chatRoomId) || isParticipantApproved(chatRoomId, request.auth.uid);
        allow delete: if isUserHost(chatRoomId);
      }

      match /polls/{pollId} {
        // Only approved participants or the host can read/write polls.
        allow read, write, create: if isUserHost(chatRoomId) || isParticipantApproved(chatRoomId, request.auth.uid);
        allow delete: if isUserHost(chatRoomId);
      }

      match /participants/{userId} {
        // Any authenticated user can attempt to create their own participant document (to request access).
        allow create: if request.auth.uid == userId;
        
        // Users can read their own participant status. The host can read any.
        allow get: if request.auth.uid == userId || isUserHost(chatRoomId);
        
        // The host can update any participant's status. Users cannot update their own status.
        allow update: if isUserHost(chatRoomId);

        // Allow any authenticated user to list participants to check if they are in the list.
        allow list: if isUserAuthenticated();
        
        allow delete: if isUserHost(chatRoomId);
      }
    }
  }
}
