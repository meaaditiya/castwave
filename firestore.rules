rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isHost(chatRoomId) {
      let chatRoom = get(/databases/$(database)/documents/chatRooms/$(chatRoomId));
      return isUser(chatRoom.data.hostId);
    }
    
    function isApproved(chatRoomId) {
        let participantPath = /databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid);
        return isAuth() && exists(participantPath) && get(participantPath).data.status == 'approved';
    }

    // --- Rules ---
    match /chatRooms/{chatRoomId} {
    
      // READ (Individual Document)
      allow get: if resource.data.isPrivate == false || isHost(chatRoomId);

      // READ (List/Query)
      allow list: if request.query.where.isPrivate == false || 
                     (isAuth() && request.query.where.hostId == request.auth.uid);

      // WRITE
      allow create: if isUser(request.resource.data.hostId);
      allow update: if isHost(chatRoomId) || 
                      (isAuth() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['typingUsers']));
      allow delete: if isHost(chatRoomId);

      // --- Subcollections ---
      
      match /participants/{userId} {
        allow read: if isHost(chatRoomId) || isUser(userId);
        allow create: if isUser(userId);
        allow update: if isHost(chatRoomId) || isUser(userId);
        allow delete: if isHost(chatRoomId);
      }
      
      match /messages/{messageId} {
        allow read: if isApproved(chatRoomId);
        allow create: if isApproved(chatRoomId) && isUser(request.resource.data.userId);
        allow update: if isApproved(chatRoomId) && resource.data.voters[request.auth.uid] == null;
        allow delete: if isHost(chatRoomId);
      }
      
      match /polls/{pollId} {
        allow read: if isApproved(chatRoomId);
        allow create, delete: if isHost(chatRoomId);
        allow update: if isHost(chatRoomId) || 
                        (isApproved(chatRoomId) && resource.data.voters[request.auth.uid] == null);
      }
    }
  }
}
