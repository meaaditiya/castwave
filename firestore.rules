rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules more readable.
    function isAuth() {
      return request.auth != null;
    }

    function isHost(chatRoomId) {
      return request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
    }

    function isApprovedParticipant(chatRoomId) {
      let participantDoc = get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid));
      return isAuth() && exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) && participantDoc.data.status == 'approved';
    }

    match /chatRooms/{chatRoomId} {
      // Anyone can query the list of chat rooms. Filtering for public rooms is done on the client.
      allow list: if isAuth();
      
      // Anyone authenticated can read the main document of any room if they have the ID.
      // This is necessary to load the room details before deciding to join.
      allow get: if isAuth();

      // Only authenticated users can create rooms.
      allow create: if isAuth();

      // Only the host can update or delete their own room.
      allow update, delete: if isAuth() && isHost(chatRoomId);

      // --- PARTICIPANTS SUBCOLLECTION ---
      match /participants/{userId} {
        // The host can read, create, update, and delete any participant record.
        allow read, write: if isAuth() && isHost(chatRoomId);
        
        // A user can read their own participant document.
        allow get: if isAuth() && request.auth.uid == userId;

        // Any authenticated user can attempt to create their own participant document (i.e., request to join).
        allow create: if isAuth() && request.auth.uid == userId;
      }
      
      // --- MESSAGES SUBCOLLECTION ---
      match /messages/{messageId} {
        // Read: Host or approved participants.
        allow read: if isAuth() && (isHost(chatRoomId) || isApprovedParticipant(chatRoomId));
        
        // Write: Host or approved participants.
        allow write: if isAuth() && (isHost(chatRoomId) || isApprovedParticipant(chatRoomId));
      }

      // --- POLLS SUBCOLLECTION ---
      match /polls/{pollId} {
        // Read: Host or approved participants.
        allow read: if isAuth() && (isHost(chatRoomId) || isApprovedParticipant(chatRoomId));
        
        // Write: Only the host can create, update, or delete polls.
        allow write: if isAuth() && isHost(chatRoomId);
      }
    }
  }
}
