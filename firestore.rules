
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is an approved participant
    function isApproved(roomId) {
      return exists(/databases/$(database)/documents/chatRooms/$(roomId)/participants/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/chatRooms/$(roomId)/participants/$(request.auth.uid)).data.status == 'approved';
    }

    // Helper function to check if user is the host
    function isHost(roomId) {
      return get(/databases/$(database)/documents/chatRooms/$(roomId)).data.hostId == request.auth.uid;
    }

    match /chatRooms/{roomId} {
      // READ:
      // - If public, any authenticated user can read.
      // - If private, anyone can read the main document (to check its status), but subcollections are protected.
      allow read: if request.auth != null && (
                    resource.data.isPrivate == false ||
                    (resource.data.isPrivate == true)
                  );

      // CREATE: Any authenticated user can create a room.
      allow create: if request.auth != null;

      // UPDATE: Only the host can update a room.
      allow update: if request.auth != null && isHost(roomId);

      // DELETE: Only the host can delete a room.
      allow delete: if request.auth != null && isHost(roomId);

      // --- Subcollections ---

      match /participants/{userId} {
        // READ:
        // - Public rooms: any auth user can read participants.
        // - Private rooms: approved participants and the host can read.
        allow read: if request.auth != null && (
                      get(/databases/$(database)/documents/chatRooms/$(roomId)).data.isPrivate == false ||
                      isApproved(roomId) ||
                      isHost(roomId)
                    );

        // CREATE/UPDATE: 
        // - Host can change status of anyone.
        // - Users can add themselves (for joining).
        allow write: if request.auth != null && (
                      isHost(roomId) ||
                      request.auth.uid == userId
                    );
      }

      match /messages/{messageId} {
        // READ/LIST:
        // - Public rooms: any auth user can read messages.
        // - Private rooms: only approved participants and the host can read messages.
        allow read: if request.auth != null && (
                      get(/databases/$(database)/documents/chatRooms/$(roomId)).data.isPrivate == false ||
                      isApproved(roomId) || 
                      isHost(roomId)
                    );
        
        // CREATE/UPDATE: Only approved participants and the host can write/update messages.
        allow write: if request.auth != null && (isApproved(roomId) || isHost(roomId));
      }

      match /polls/{pollId} {
        // READ: 
        // - Public rooms: any auth user can read polls.
        // - Private rooms: approved participants and the host can read polls.
         allow read: if request.auth != null && (
                      get(/databases/$(database)/documents/chatRooms/$(roomId)).data.isPrivate == false ||
                      isApproved(roomId) || 
                      isHost(roomId)
                    );

        // CREATE/UPDATE: Only the host can create/update polls.
        allow create, update: if request.auth != null && isHost(roomId);
      }
    }
  }
}
