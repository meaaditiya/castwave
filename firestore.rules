rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isHost(chatRoomId) {
      let room = get(/databases/$(database)/documents/chatRooms/$(chatRoomId));
      return isAuth() && room.data.hostId == request.auth.uid;
    }
    
    function isHostByResourceId() {
      return isAuth() && resource.data.hostId == request.auth.uid;
    }

    function isApprovedParticipant(chatRoomId) {
      let participant = get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid));
      return isAuth() && participant.data.status == 'approved';
    }

    match /chatRooms/{chatRoomId} {
      allow read: if resource.data.isPrivate == false || isHostByResourceId();
      allow create: if isAuth() && request.resource.data.hostId == request.auth.uid;
      allow update: if isHost(chatRoomId) || (isAuth() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['typingUsers']));
      
      // Allow delete if the request comes from the host.
      allow delete: if isHost(chatRoomId);

      match /participants/{userId} {
        allow read: if isHost(chatRoomId) || request.auth.uid == userId;
        allow create: if isAuth() && request.auth.uid == userId;
        allow update: if isHost(chatRoomId) || (isAuth() && request.auth.uid == userId);
        allow delete: if isHost(chatRoomId);
      }

      match /messages/{messageId} {
        allow read: if isHost(chatRoomId) || isApprovedParticipant(chatRoomId);
        allow create: if (isHost(chatRoomId) || isApprovedParticipant(chatRoomId)) && request.resource.data.userId == request.auth.uid;
        allow update: if (isHost(chatRoomId) || isApprovedParticipant(chatRoomId)) && resource.data.voters[request.auth.uid] == null;
        allow delete: if isHost(chatRoomId);
      }

      match /polls/{pollId} {
        allow read: if isHost(chatRoomId) || isApprovedParticipant(chatRoomId);
        allow create: if isHost(chatRoomId);
        allow update: if isHost(chatRoomId) || (isApprovedParticipant(chatRoomId) && resource.data.voters[request.auth.uid] == null);
        allow delete: if isHost(chatRoomId);
      }
    }
  }
}
