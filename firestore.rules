
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAuth() {
      return request.auth != null;
    }
    
    function isHost(chatRoomId) {
      return request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId;
    }

    function isApprovedParticipant(chatRoomId) {
      return exists(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/chatRooms/$(chatRoomId)/participants/$(request.auth.uid)).data.status == 'approved';
    }

    match /chatRooms/{chatRoomId} {
      // READ:
      // - Public rooms are readable by any authenticated user.
      // - Private rooms' main document is readable by any authenticated user (to check isPrivate, etc).
      allow read: if isAuth() && (
                    !resource.data.isPrivate || 
                    (resource.data.isPrivate && isAuth())
                  );

      allow create: if isAuth() && request.auth.uid == request.resource.data.hostId;
      allow update, delete: if isAuth() && isHost(chatRoomId);

      match /participants/{participantId} {
        // READ:
        // - In public rooms, anyone can read the participant list.
        // - In private rooms, only approved participants can read the list.
        allow read: if isAuth() && (
                      !get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.isPrivate ||
                      isApprovedParticipant(chatRoomId) ||
                      isHost(chatRoomId)
                    );
        
        // WRITE:
        // - A user can add themselves (or be added by the host).
        // - The host can update any participant's status.
        allow write: if isAuth() && (
                      request.auth.uid == participantId ||
                      isHost(chatRoomId)
                     );
      }

      match /messages/{messageId} {
        // READ:
        // - In public rooms, anyone can read messages.
        // - In private rooms, only approved participants can read messages.
        allow read: if isAuth() && (
                      !get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.isPrivate ||
                      isApprovedParticipant(chatRoomId) ||
                      isHost(chatRoomId)
                    );

        // WRITE:
        // - Only approved participants can write messages.
        // - The host can write/update messages (e.g., featuring them).
        allow write: if isAuth() && (
                      isApprovedParticipant(chatRoomId) ||
                      isHost(chatRoomId)
                     );
      }
      
      match /polls/{pollId} {
        // READ/WRITE:
        // - In public rooms, anyone can interact with polls.
        // - In private rooms, only approved participants can.
        // - Only the host can create/end/update polls.
        allow read: if isAuth() && (
                      !get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.isPrivate ||
                      isApprovedParticipant(chatRoomId) ||
                      isHost(chatRoomId)
                    );
                    
        allow write: if isAuth() && (
                       (isApprovedParticipant(chatRoomId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['options', 'voters'])) || // Voters can only update votes
                       isHost(chatRoomId) // Host has full control
                     );
      }
    }
  }
}
