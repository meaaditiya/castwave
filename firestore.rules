rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Rules for chatRooms collection
    match /chatRooms/{chatRoomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.hostId == request.auth.uid;
      allow update: if request.auth != null && resource.data.hostId == request.auth.uid;
      
      // Only the host can delete the chat room
      allow delete: if request.auth != null && resource.data.hostId == request.auth.uid;

      // Rules for messages subcollection
      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null; // Anyone can create a message
        allow update: if request.auth != null; // To allow voting
        allow delete: if request.auth != null && get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid;
      }
      
      // Rules for participants subcollection
      match /participants/{userId} {
        allow read: if request.auth != null;
        
        // A user can add themselves (request to join)
        allow create: if request.auth != null && request.auth.uid == userId;

        // The host can update any participant's status
        allow update: if request.auth != null && get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid;
        
        allow delete: if request.auth != null && get(/databases/$(database)/documents/chatRooms/$(chatRoomId)).data.hostId == request.auth.uid;
      }
    }
  }
}
